/* eslint-disable */
import React from 'react'
import ReferencePage from '../../reference-page'


const SortableListPage = () => (
  <ReferencePage data={{"tags":{"see":"SortableItem *\nSortable *\n{@link https://northlight.dev/reference/sortable-list}","example":"## You can render any layout of sortable components, for example grid:\n(?\n() => {\nconst [items, setItems] = useState(Array.from({length: 100}, (_, i) => i))\nreturn (\n<Stack>\n<SimpleGrid minChildWidth=\"50px\" spacing={ 4 }>\n <SortableList\n     items={ items }\n     onChange={ (items) => setItems(items) }\n />\n</SimpleGrid>\n       <Code p={ 2 } borderRadius={ 4 }>\n         { JSON.stringify(items, null, 2) }\n       </Code>\n       </Stack>\n)}\n?)"},"filePath":"lib/components/drag-and-drop/sortable-list.tsx","description":"Util component to render sortable items under sortable context","displayName":"SortableList","methods":[],"props":{"children":{"defaultValue":null,"description":"","name":"children","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"enum","raw":"ChildrenType<T, SyntheticListenerMap>","value":[{"value":"Element","description":"","fullComment":"","tags":{}},{"value":"Element[]","description":"","fullComment":"","tags":{}},{"value":"(props: T, secondProp: SyntheticListenerMap, thirdProp?: any) => Element | Element[]","description":"","fullComment":"","tags":{}}]}},"items":{"defaultValue":null,"description":"","name":"items","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":true,"type":{"name":"T[]"}},"collisionDetection":{"defaultValue":null,"description":"","name":"collisionDetection","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"CollisionDetection"}},"strategy":{"defaultValue":null,"description":"","name":"strategy","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"SortingStrategy"}},"onChange":{"defaultValue":{"value":"() => {}"},"description":"","name":"onChange","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"(items: T[]) => void"}},"createKey":{"defaultValue":{"value":"identity as (t: T) => UniqueIdentifier"},"description":"","name":"createKey","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"(item: T) => UniqueIdentifier"}},"displayOverlay":{"defaultValue":{"value":"false"},"description":"","name":"displayOverlay","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"sensors":{"defaultValue":null,"description":"","name":"sensors","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"SensorDescriptor<SensorOptions>[]"}},"dblClickThreshold":{"defaultValue":{"value":"300"},"description":"","name":"dblClickThreshold","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"number"}},"disableDrag":{"defaultValue":{"value":"false"},"description":"","name":"disableDrag","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"onMovedItem":{"defaultValue":null,"description":"","name":"onMovedItem","parent":{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"({ item, oldIndex, newIndex }: MovedItemType<T>) => void"}}}}} />
);

export default SortableListPage
