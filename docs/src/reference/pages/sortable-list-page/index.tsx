/* eslint-disable */
import React from 'react'
import ReferencePage from '../../reference-page'


const SortableListPage = () => (
  <ReferencePage data={{"tags":{"see":"SortableItem *\nSortable *\n{@link https://northlight.dev/reference/sortable-list}","example":"(Example)\n## You can render any layout of sortable components, for example grid:\n(?\n() => {\nconst [items, setItems] = useState(Array.from({length: 100}, (_, i) => i))\nreturn (\n<Stack>\n<SimpleGrid minChildWidth=\"50px\" spacing={ 4 }>\n<SortableList\nitems={ items }\nonChange={ (items) => setItems(items) }\n/>\n</SimpleGrid>\n<Code p={ 2 } borderRadius={ 4 }>\n{ JSON.stringify(items, null, 2) }\n</Code>\n</Stack>\n)}\n?)\n(Example)\n### With custom component\n(?\n<Stack>\n\n<SortableList\nitems={ [ { name: 'item1' }, { name: 'item2' }, { name: 'item3' } ] }\ncreateKey={ (item) => item.name }\ndisableDrag={ true }\n>\n{ ({ name }, listeners, { isOver }) => (\n<HStack>\n<DragHandle { ...listeners } isDragging={ isOver } />\n<Input defaultValue={ name } />\n</HStack>\n) }\n</SortableList>\n</Stack>\n?)\n<br />\nIf disableDrag=false, then when the user double clicks it will trigger\nthe default behaviour of the rendered component instead of the dragging,\nyou can adjust the threshold with dblClickThreshold, default is 300ms"},"filePath":"/Users/orestisrodriguez/Documents/Projects/@mediatool/northlight/framework/lib/components/drag-and-drop/sortable-list.tsx","description":"Util component to render sortable items under sortable context","displayName":"SortableList","methods":[],"props":{"children":{"defaultValue":null,"description":"","name":"children","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"enum","raw":"ChildrenType<T, SyntheticListenerMap>","value":[{"value":"Element","description":"","fullComment":"","tags":{}},{"value":"Element[]","description":"","fullComment":"","tags":{}},{"value":"(props: T, secondProp: SyntheticListenerMap, thirdProp?: any) => Element | Element[]","description":"","fullComment":"","tags":{}}]}},"items":{"defaultValue":null,"description":"","name":"items","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":true,"type":{"name":"T[]"}},"collisionDetection":{"defaultValue":null,"description":"Play around with this in case the sortable items don't land where\nsupposed to. See: https://docs.dndkit.com/api-documentation/context-provider/collision-detection-algorithms","name":"collisionDetection","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"CollisionDetection"}},"strategy":{"defaultValue":null,"description":"Used to optimize rendering, see: https://docs.dndkit.com/presets/sortable#sorting-strategies","name":"strategy","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"SortingStrategy"}},"onChange":{"defaultValue":{"value":"() => {}"},"description":"","name":"onChange","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"(items: T[]) => void"}},"createKey":{"defaultValue":{"value":"identity as (t: T) => UniqueIdentifier"},"description":"","name":"createKey","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"(item: T) => UniqueIdentifier"}},"displayOverlay":{"defaultValue":{"value":"false"},"description":"You can add an overlay, which can make it more accessible in use\ncases where it can be hard to see for the user where their item will land on drop","name":"displayOverlay","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"sensors":{"defaultValue":null,"description":"In case you want to adjust the input methods, see: https://docs.dndkit.com/api-documentation/sensors","name":"sensors","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"SensorDescriptor<SensorOptions>[]"}},"dblClickThreshold":{"defaultValue":{"value":"300"},"description":"","name":"dblClickThreshold","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"number"}},"disableDrag":{"defaultValue":{"value":"false"},"description":"","name":"disableDrag","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"enum","raw":"boolean","value":[{"value":"false"},{"value":"true"}]}},"onMovedItem":{"defaultValue":null,"description":"callback, passes the dragged item and it's old / new index after a drag,","name":"onMovedItem","parent":{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"},"declarations":[{"fileName":"northlight/framework/lib/components/drag-and-drop/types.ts","name":"SortableListProps"}],"required":false,"type":{"name":"({ item, oldIndex, newIndex }: MovedItemType<T>) => void"}}}}} />
);

export default SortableListPage
